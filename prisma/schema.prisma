// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  userId Int @id @default(autoincrement())
  email String @unique
  password String
  userRoles UserRoles[]
  userPermissions UserPermissions[]
  mahasiswa Mahasiswa?
  dosenPembimbingMagang DosenPembimbingMagang?
  pembimbingLapangan PembimbingLapangan?
  adminProvinsi AdminProvinsi?
  adminSatker AdminSatker?
}

model Roles{
  roleId Int @id @default(autoincrement())
  roleName String
  userRoles UserRoles[]
  permissionRoles PermissionRoles[]
}

model Permissions{
  permissionId Int @id @default(autoincrement())
  permissionName String
  permissionRoles PermissionRoles[]
  userPermissions UserPermissions[]
}

model UserRoles{
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [userId])
  userId Int
  role Roles @relation(fields: [roleId], references: [roleId])
  roleId Int
}

model PermissionRoles{'
  id Int @id @default(autoincrement())
  role Roles @relation(fields: [roleId], references: [roleId])
  roleId Int
  permission Permissions @relation(fields: [permissionId], references: [permissionId])
  permissionId Int
}

model UserPermissions{
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [userId])
  userId Int
  permission Permissions @relation(fields: [permissionId], references: [permissionId])
  permissionId Int
}

model Mahasiswa {
  nim String @id @unique
  user User @relation(fields: [userId], references: [userId])
  userId Int @unique
  dosenPembimbingMagang DosenPembimbingMagang @relation(fields: [nipDosen], references: [nip])
  nipDosen String
  pembimbingLapangan PembimbingLapangan @relation(fields: [nipPemlap], references: [nip])
  nipPemlap String
  nama String?
  alamat String?
  prodi String?
  kelas String?
  nomorRekening String?
  izinBimbinganSkripsi IzinBimbinganSkripsi[]
  bimbinganDosen BimbinganDosen[]
  kegiatanHarian KegiatanHarian[]
  presensi Presensi[]
  tipeKegiatan TipeKegiatan[]
  rekapKegiatanBulanan RekapKegiatanBulanan[]
  penilaianBimbingan PenilaianBimbingan?
  penilaianLaporanDosen penilaianLaporanDosen?
  penilaianKinerja penilaianKinerja?
  penilaianLaporanPemlap penilaianLaporanPemlap?
  izinPresensi izinPresensi[]
  satker Satker @relation(fields: [satkerId], references: [satkerId])
  satkerId Int
}

model DosenPembimbingMagang {
  nip String @id @unique
  user User @relation(fields: [userId], references: [userId])
  userId Int @unique
  mahasiswa Mahasiswa[]
  nama String
  prodi String
  bimbinganDosen BimbinganDosen[]
}

model PembimbingLapangan {
  nip String @id @unique
  user User @relation(fields: [userId], references: [userId])
  userId Int @unique
  mahasiswa Mahasiswa[]
  nama String
}

model AdminProvinsi {
  adminProvinsiId Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [userId])
  userId Int @unique
  satker Satker[]
}

model AdminSatker {
  adminSatkerId Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [userId])
  userId Int @unique
}

model Satker {
  satkerId Int @id @default(autoincrement())
  nama String
  alamat String
  email String
  adminProvinsi AdminProvinsi @relation(fields: [adminProvinsiId], references: [adminProvinsiId])
  adminProvinsiId Int
  mahasiswa Mahasiswa[]
}

model IzinBimbinganSkripsi {
  izinBimbinganId Int @id @default(autoincrement())
  mahasiswa Mahasiswa @relation(fields: [nim], references: [nim])
  nim String
  tanggal DateTime
  keterangan String
  status Boolean
}

model BimbinganDosen {
  bimbinganId Int @id @default(autoincrement())
  mahasiswa Mahasiswa @relation(fields: [nim], references: [nim])
  nim String
  dosen DosenPembimbingMagang @relation(fields: [nipDosen], references: [nip])
  nipDosen String
  tanggal DateTime
  keterangan String
  createdAt DateTime @default(now())
}

model KegiatanHarian {
  kegiatanId Int @id @default(autoincrement())
  mahasiswa Mahasiswa @relation(fields: [nim], references: [nim])
  nim String
  judul String
  tanggal DateTime
  deskripsi String
  kuantitas Int
  kualitas Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tipeKegiatan TipeKegiatan @relation(fields: [tipeKegiatanId], references: [tipeKegiatanId])
  tipeKegiatanId Int
}

model Presensi {
  presensiId Int @id @default(autoincrement())
  mahasiswa Mahasiswa @relation(fields: [nim], references: [nim])
  nim String
  tanggal DateTime
  waktu DateTime
  keterangan String
}

model TipeKegiatan {
  tipeKegiatanId Int @id @default(autoincrement())
  mahaasiswa Mahasiswa @relation(fields: [nim], references: [nim])
  nim String
  nama String
  kegiatanHarian KegiatanHarian[]
}

model RekapKegiatanBulanan {
  rekapId Int @id @default(autoincrement())
  mahasiswa Mahasiswa @relation(fields: [nim], references: [nim])
  nim String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PenilaianBimbingan {
  penilaianId Int @id @default(autoincrement())
  mahasiswa Mahasiswa @relation(fields: [nim], references: [nim])
  nim String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model penilaianLaporanDosen {
  penilaianId Int @id @default(autoincrement())
  mahasiswa Mahasiswa @relation(fields: [nim], references: [nim])
  nim String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model penilaianKinerja {
  penilaianId Int @id @default(autoincrement())
  mahasiswa Mahasiswa @relation(fields: [nim], references: [nim])
  nim String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model penilaianLaporanPemlap {
  penilaianId Int @id @default(autoincrement())
  mahasiswa Mahasiswa @relation(fields: [nim], references: [nim])
  nim String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model izinPresensi {
  izinId Int @id @default(autoincrement())
  mahasiswa Mahasiswa @relation(fields: [nim], references: [nim])
  nim String
  tanggal DateTime
  waktu DateTime
  keterangan String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}